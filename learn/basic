



:q: Thoát khỏi Vim
:q!: Bắt buộc thoát không cần lưu
:w: Lưu file
:w!: Bắt buộc ghi file (ghi đè)
:wq: Lưu xong thoát


$: nhảy về cuối dòng hiện tại
0 (số không @@): nhảy về đầu dòng hiện tại


gg: nhảy lên đầu file
G: nhảy xuống cuối file
50G: nhảy tới dòng 50 của file
Ctrl + G: Xem thông tin dòng hiện tại



let mapleader = "\"
:map <leader>A  haha <Esc>
: map \A haha <Esc>

split windows:
<C-w>v: vertical=chia doc
<C-w>s: horizontally= chia ngang
 


                            normal mode:
key stroke:
<C-w>o = press ctrl+w break roi press o


o : new file
. : repeat cmd truoc do
u : undo

3gg=3G : goto line 3
gg : dau file
G : cuoi file

^ : line first word
g_: line last word

0 : line first
$ : line last

w: forward(next=dau tu tiep theo)
e: forward(next= cuoi tu tiep theo)
b: backward(previous=dau tu truoc do)
ge: backward (end tu truoc do)

dd: xoa 1 dong
d3d: xoa 3 dong
d3w: delete 3 word(tinh tu vi tri cursor)
x: cut 1 letter
c3w new_string<ESC>: override 3 tu= new_string
yy: copy 1 line
yiw: copy  word hien tai
yy - Copies a line
yw - Copies a word
y$ - Copies from where your cursor is to the end of a line

2. Vim commands for movement#
When using movement commands, you can put a number in front of them to make Vim complete a command multiple times. For example, 5h will move your cursor five spaces to the left, and 90j will put your cursor at the beginning of the 90th line down from where your cursor currently is.

h - Moves the cursor to the left

l - Moves the cursor to the right

j - Moves the cursor down one line

k - Moves the cursor up one line

H - Puts the cursor at the top of the screen

M - Puts the cursor in the middle of the screen

L - Puts the cursor at the bottom of the screen

w - Puts the cursor at the start of the next word

b - Puts the cursor at the start of the previous word

e - Puts the cursor at the end of a word

0 - Places the cursor at the beginning of a line

$ - Places the cursor at the end of a line

) - Takes you to the start of the next sentence

( - Takes you to the start of the previous sentence

} - Takes you to the start of the next paragraph or block of text

{ - Takes you to the start of the previous paragraph or block of text

Ctrl + f - Takes you one page forward

Ctrl + b - Takes you one page back

gg - Places the cursor at the start of the file

G - Places the cursor at the end of the file

# - Where # is the number of a line, this command takes you to the line specified

3. Vim commands for editing#
Those who use Vim tend to use the term "yank" where most people would use the terms copy and paste. Therefore, the command for copying a word is yw, which stands for yank word, and the command for pasting whatever has been copied is p, meaning put. If you look up additional commands in the future, it can be confusing if you don't know what yank and put mean when using Vim.

You also have two options for how to select text. You can either use commands like dd, which deletes a single line, and yy, which copies a single line, or you can highlight text and then copy it to the unnamed register. The paste commands work the same whether you've highlighted text or used a command to automatically copy it.

As with movement commands, putting a number in front of the command can increase the number of times a task is completed. For instance, putting a number in front of yy will increase the number of lines copied, so 5yy will copy five lines.

yy - Copies a line

yw - Copies a word

y$ - Copies from where your cursor is to the 

d - Deletes highlighted text

dd - Deletes a line of text

dw - Deletes a word

D - Deletes everything from where your cursor is to the end of the line

d0 - Deletes everything from where your cursor is to the beginning of the line

dgg - Deletes everything from where your cursor is to the beginning of the file

dG - Deletes everything from where your cursor is to the end of the file

x - Deletes a single character

u - Undo the last operation; u# allows you to undo multiple actions

Ctrl + r - Redo the last undo

. - Repeats the last action

g~: swap case
gu: make lowercase
gU: make uppercase
>G: tab word
A;<esc> : cuoi line($a) them ; press<esc>
5@a: titlecase


find and replace text
:5,12s/foo/bar/g


f<char> search char=chu cai can tim
`{a-z}: any lowercase letter
m{a-zA-Z}: any lower and uppercase letter
$<>: dung shell
:<> ex command
/<> forward=next search
?<> backward=previous search
=<> code vim

-------------------------------------------------------------------------

                    visual mode: select contents
    che do chon nhieu words, lines

v
*: select all word giong nhau 
vjj: chon them 2 line
vG: full below lines
o: go to end highlight text
vit: goto contents html
U: uppercase
/ge<CR>: select contents from cursor to ge

-------------------------------------------------------------------------


cmd mode = (:)
:w[rite] -> save file
:clo[se]

:shell
:copy = :t
:6copy.=:6t. => copy line 6 goto current line=.
:t6 => current line. paste below line 6
:t. => duplicate copy and paste vi tri hien tai
:t$ => paste to end line

# move lines
:m[ove]
:'<,'>m$ : move select contents to end lines
:!{cmd}
:5,7m 21    move lines 5, 6 and 7 to after line 21
:5,7m 0 move lines 5, 6 and 7 to before first line
:5,7m $ move lines 5, 6 and 7 to after last line
:.,.+4m 21  move 5 lines starting at current line to after line 21
:,+4m14 same (. for current line is assumed)
